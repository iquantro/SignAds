Index: SignAds/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for SignAds project.\r\n\r\nGenerated by 'django-admin startproject' using Django 3.0.8.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/3.0/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/3.0/ref/settings/\r\n\"\"\"\r\n\r\nimport os\r\n\r\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\r\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = '#^#%72d+m(vuu$fz)s)$eut8_kst#-1of2dj=p@wt5ky&rqg6^'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = [\"*\"]\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'accounts.apps.AccountsConfig',\r\n    'AdRecords',\r\n    'djoser',\r\n    'rest_framework_simplejwt',\r\n    'rest_framework',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'SignAds.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [os.path.join(BASE_DIR, 'templates')]\r\n        ,\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'SignAds.wsgi.application'\r\n\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\r\n    }\r\n}\r\n\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_AUTHENTICATION_CLASSES': (\r\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\r\n    ),\r\n}\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/3.0/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'UTC'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_L10N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\r\n\r\nSTATIC_URL = '/static/'\r\nMEDIA_URL = '/media/'\r\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SignAds/settings.py	(revision 232ce9bd653c28d83378cea63913964f50f6f400)
+++ SignAds/settings.py	(date 1596091939010)
@@ -42,6 +42,7 @@
     'djoser',
     'rest_framework_simplejwt',
     'rest_framework',
+    'reset_migrations',
 ]
 
 MIDDLEWARE = [
Index: accounts/serializers.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from rest_framework import serializers\r\nfrom .models import userProfile,CompanyProfile\r\n\r\n\r\n\r\n\r\nclass userProfileSerializer(serializers.ModelSerializer):\r\n    user=serializers.StringRelatedField(read_only=True)\r\n\r\n    class Meta:\r\n        model=userProfile\r\n        fields='__all__'\r\n\r\nclass companyProfileSerializer(serializers.ModelSerializer):\r\n    company=serializers.StringRelatedField(read_only=True)\r\n    class Meta:\r\n        model=CompanyProfile\r\n        fields='__all__'
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/serializers.py	(revision 232ce9bd653c28d83378cea63913964f50f6f400)
+++ accounts/serializers.py	(date 1596090578414)
@@ -1,18 +1,29 @@
 from rest_framework import serializers
-from .models import userProfile,CompanyProfile
+from .models import userProfile, AdvertiserProfile
 
 
 
 
 class userProfileSerializer(serializers.ModelSerializer):
-    user=serializers.StringRelatedField(read_only=True)
+    user = serializers.StringRelatedField(read_only=True)
+    image_property_id = serializers.PrimaryKeyRelatedField(many=True, read_only=True)
+    text_property_id = serializers.PrimaryKeyRelatedField(many=True, read_only=True)
+
 
     class Meta:
         model=userProfile
-        fields='__all__'
+        fields = ('user',
+                  'user_description',
+                  'user_location',
+                  'date_joined_for_user',
+                  'user_profile_updated_on',
+                  'user_is_organizer',
+                  'image_property_id',
+                  'text_property_id')
 
-class companyProfileSerializer(serializers.ModelSerializer):
-    company=serializers.StringRelatedField(read_only=True)
+class advertiserProfileSerializer(serializers.ModelSerializer):
+    advertiser = serializers.StringRelatedField(read_only=True)
+
     class Meta:
-        model=CompanyProfile
+        model=AdvertiserProfile
         fields='__all__'
\ No newline at end of file
Index: accounts/signals.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib.auth.models import User\r\nfrom django.db.models.signals import post_save\r\nfrom django.dispatch import receiver\r\n\r\nfrom .models import userProfile,CompanyProfile\r\n\r\n\r\n@receiver(post_save, sender=User)\r\ndef create_profile(sender, instance, created, **kwargs):\r\n    if created:\r\n        userProfile.objects.create(user=instance)\r\n        CompanyProfile.objects.create(company=instance)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/signals.py	(revision 232ce9bd653c28d83378cea63913964f50f6f400)
+++ accounts/signals.py	(date 1596031578869)
@@ -2,11 +2,10 @@
 from django.db.models.signals import post_save
 from django.dispatch import receiver
 
-from .models import userProfile,CompanyProfile
+from .models import userProfile, AdvertiserProfile
 
 
 @receiver(post_save, sender=User)
 def create_profile(sender, instance, created, **kwargs):
     if created:
-        userProfile.objects.create(user=instance)
-        CompanyProfile.objects.create(company=instance)
\ No newline at end of file
+        userProfile.objects.create(user=instance)
\ No newline at end of file
Index: accounts/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.urls import include, path\r\nfrom rest_framework.routers import DefaultRouter\r\n\r\nfrom .views import UserProfileListCreateView, userProfileDetailView\r\nfrom .views import CompanyProfileListCreateView,companyProfileDetailView\r\n\r\nurlpatterns = [\r\n    #gets all user profiles and create a new profile\r\n    path(\"all-user-profiles\",UserProfileListCreateView.as_view(),name=\"all-profiles\"),\r\n   # retrieves profile details of the currently logged in user\r\n    path(\"user-profile/<int:pk>\",userProfileDetailView.as_view(),name=\"profile\"),\r\n\r\n    #gets all customer profiles and creates a new customer\r\n    path(\"all-company-profiles\",CompanyProfileListCreateView.as_view(),name=\"all-profiles\"),\r\n    #retrieves profile details of the currently logged in Company party\r\n    path(\"company-profile/<int:pk>\",companyProfileDetailView.as_view(),name=\"profile\"),\r\n]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/urls.py	(revision 232ce9bd653c28d83378cea63913964f50f6f400)
+++ accounts/urls.py	(date 1596031930090)
@@ -1,8 +1,6 @@
 from django.urls import include, path
-from rest_framework.routers import DefaultRouter
-
 from .views import UserProfileListCreateView, userProfileDetailView
-from .views import CompanyProfileListCreateView,companyProfileDetailView
+from .views import AdvertiserProfileListCreateView, advertiserProfileDetailView
 
 urlpatterns = [
     #gets all user profiles and create a new profile
@@ -11,7 +9,7 @@
     path("user-profile/<int:pk>",userProfileDetailView.as_view(),name="profile"),
 
     #gets all customer profiles and creates a new customer
-    path("all-company-profiles",CompanyProfileListCreateView.as_view(),name="all-profiles"),
+    path("all-advertiser-profiles",AdvertiserProfileListCreateView.as_view(),name="all-profiles"),
     #retrieves profile details of the currently logged in Company party
-    path("company-profile/<int:pk>",companyProfileDetailView.as_view(),name="profile"),
+    path("advertiser-profile/<int:pk>",advertiserProfileDetailView.as_view(),name="profile"),
 ]
\ No newline at end of file
Index: accounts/migrations/0005_auto_20200730_1146.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/migrations/0005_auto_20200730_1146.py	(date 1596089787282)
+++ accounts/migrations/0005_auto_20200730_1146.py	(date 1596089787282)
@@ -0,0 +1,25 @@
+# Generated by Django 3.0.8 on 2020-07-30 06:16
+
+from django.conf import settings
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+        ('accounts', '0004_auto_20200729_1942'),
+    ]
+
+    operations = [
+        migrations.RemoveField(
+            model_name='userprofile',
+            name='id',
+        ),
+        migrations.AlterField(
+            model_name='userprofile',
+            name='user',
+            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL),
+        ),
+    ]
Index: accounts/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\nfrom django.contrib.auth.models import User\r\n# Create your models here.\r\n\r\nclass userProfile(models.Model):\r\n    user = models.OneToOneField(User,on_delete=models.CASCADE)\r\n    user_description = models.TextField(blank=True,null=True)\r\n    user_location = models.CharField(max_length=30,blank=True)\r\n    date_joined_for_user = models.DateTimeField(auto_now_add=True)\r\n    user_profile_updated_on = models.DateTimeField(auto_now=True)\r\n    user_is_organizer = models.BooleanField(default=False)\r\n\r\n\r\n    def __str__(self):\r\n        return self.user.username\r\n\r\nclass CompanyProfile(models.Model):\r\n    date_joined_for_customer = models.DateTimeField(auto_now_add=True)\r\n    company_profile_updated_on = models.DateTimeField(auto_now=True)\r\n    company_is_organizer = models.BooleanField(default=False)\r\n    company_location = models.CharField(max_length=30,blank=True)\r\n    company_description = models.TextField(blank=True, null=True)\r\n    company = models.OneToOneField(User, on_delete=models.CASCADE)\r\n\r\n    def __str__(self):\r\n        return self.company.companyname
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/models.py	(revision 232ce9bd653c28d83378cea63913964f50f6f400)
+++ accounts/models.py	(date 1596090578426)
@@ -2,9 +2,17 @@
 from django.contrib.auth.models import User
 # Create your models here.
 
+class AdvertiserProfile(models.Model):
+    date_joined_for_advertiser = models.DateTimeField(auto_now_add=True)
+    advertiser_profile_updated_on = models.DateTimeField(auto_now=True)
+    advertiser_is_organizer = models.BooleanField(default=False)
+    advertiser_location = models.CharField(max_length=30, blank=True)
+    advertiser_description = models.TextField(blank=True, null=True)
+    advertiser = models.OneToOneField(User, on_delete=models.CASCADE)
+
 class userProfile(models.Model):
-    user = models.OneToOneField(User,on_delete=models.CASCADE)
-    user_description = models.TextField(blank=True,null=True)
+    user = models.OneToOneField(User, on_delete=models.CASCADE)
+    user_description = models.TextField(blank=True, null=True)
     user_location = models.CharField(max_length=30,blank=True)
     date_joined_for_user = models.DateTimeField(auto_now_add=True)
     user_profile_updated_on = models.DateTimeField(auto_now=True)
@@ -13,14 +21,3 @@
 
     def __str__(self):
         return self.user.username
-
-class CompanyProfile(models.Model):
-    date_joined_for_customer = models.DateTimeField(auto_now_add=True)
-    company_profile_updated_on = models.DateTimeField(auto_now=True)
-    company_is_organizer = models.BooleanField(default=False)
-    company_location = models.CharField(max_length=30,blank=True)
-    company_description = models.TextField(blank=True, null=True)
-    company = models.OneToOneField(User, on_delete=models.CASCADE)
-
-    def __str__(self):
-        return self.company.companyname
\ No newline at end of file
Index: accounts/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from rest_framework.generics import (ListCreateAPIView,RetrieveUpdateDestroyAPIView,)\r\nfrom rest_framework.permissions import IsAuthenticated\r\nfrom .models import userProfile,CompanyProfile\r\nfrom .permissions import IsOwnerProfileOrReadOnly\r\nfrom .serializers import userProfileSerializer,companyProfileSerializer\r\n\r\n# Create your views here.\r\n\r\nclass UserProfileListCreateView(ListCreateAPIView):\r\n    queryset=userProfile.objects.all()\r\n    serializer_class=userProfileSerializer\r\n    permission_classes=[IsAuthenticated]\r\n\r\n    def perform_create(self, serializer):\r\n        user=self.request.user\r\n        serializer.save(user=user)\r\n\r\nclass CompanyProfileListCreateView(ListCreateAPIView):\r\n    queryset=CompanyProfile.objects.all()\r\n    serializer_class=companyProfileSerializer\r\n    permission_classes=[IsAuthenticated]\r\n\r\n    def perform_create(self, serializer):\r\n        company_val=self.request.company\r\n        serializer.save(company=company_val)\r\n\r\n\r\nclass userProfileDetailView(RetrieveUpdateDestroyAPIView):\r\n    queryset=userProfile.objects.all()\r\n    serializer_class=userProfileSerializer\r\n    permission_classes=[IsOwnerProfileOrReadOnly,IsAuthenticated]\r\n\r\nclass companyProfileDetailView(RetrieveUpdateDestroyAPIView):\r\n    queryset=userProfile.objects.all()\r\n    serializer_class=companyProfileSerializer\r\n    permission_classes=[IsOwnerProfileOrReadOnly,IsAuthenticated]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/views.py	(revision 232ce9bd653c28d83378cea63913964f50f6f400)
+++ accounts/views.py	(date 1596031578847)
@@ -1,8 +1,8 @@
 from rest_framework.generics import (ListCreateAPIView,RetrieveUpdateDestroyAPIView,)
 from rest_framework.permissions import IsAuthenticated
-from .models import userProfile,CompanyProfile
+from .models import userProfile,AdvertiserProfile
 from .permissions import IsOwnerProfileOrReadOnly
-from .serializers import userProfileSerializer,companyProfileSerializer
+from .serializers import userProfileSerializer,advertiserProfileSerializer
 
 # Create your views here.
 
@@ -15,9 +15,9 @@
         user=self.request.user
         serializer.save(user=user)
 
-class CompanyProfileListCreateView(ListCreateAPIView):
-    queryset=CompanyProfile.objects.all()
-    serializer_class=companyProfileSerializer
+class AdvertiserProfileListCreateView(ListCreateAPIView):
+    queryset=AdvertiserProfile.objects.all()
+    serializer_class=advertiserProfileSerializer
     permission_classes=[IsAuthenticated]
 
     def perform_create(self, serializer):
@@ -30,7 +30,7 @@
     serializer_class=userProfileSerializer
     permission_classes=[IsOwnerProfileOrReadOnly,IsAuthenticated]
 
-class companyProfileDetailView(RetrieveUpdateDestroyAPIView):
-    queryset=userProfile.objects.all()
-    serializer_class=companyProfileSerializer
+class advertiserProfileDetailView(RetrieveUpdateDestroyAPIView):
+    queryset=AdvertiserProfile.objects.all()
+    serializer_class=advertiserProfileSerializer
     permission_classes=[IsOwnerProfileOrReadOnly,IsAuthenticated]
\ No newline at end of file
Index: accounts/migrations/0004_auto_20200729_1942.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/migrations/0004_auto_20200729_1942.py	(date 1596031962637)
+++ accounts/migrations/0004_auto_20200729_1942.py	(date 1596031962637)
@@ -0,0 +1,49 @@
+# Generated by Django 3.0.8 on 2020-07-29 14:12
+
+from django.conf import settings
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+        ('accounts', '0003_auto_20200727_1427'),
+    ]
+
+    operations = [
+        migrations.RenameModel(
+            old_name='CompanyProfile',
+            new_name='AdvertiserProfile',
+        ),
+        migrations.RenameField(
+            model_name='advertiserprofile',
+            old_name='company',
+            new_name='advertiser',
+        ),
+        migrations.RenameField(
+            model_name='advertiserprofile',
+            old_name='company_description',
+            new_name='advertiser_description',
+        ),
+        migrations.RenameField(
+            model_name='advertiserprofile',
+            old_name='company_is_organizer',
+            new_name='advertiser_is_organizer',
+        ),
+        migrations.RenameField(
+            model_name='advertiserprofile',
+            old_name='company_location',
+            new_name='advertiser_location',
+        ),
+        migrations.RenameField(
+            model_name='advertiserprofile',
+            old_name='company_profile_updated_on',
+            new_name='advertiser_profile_updated_on',
+        ),
+        migrations.RenameField(
+            model_name='advertiserprofile',
+            old_name='date_joined_for_customer',
+            new_name='date_joined_for_advertiser',
+        ),
+    ]
Index: AdRecords/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\nfrom accounts.models import userProfile\r\n\r\nclass Image(models.Model):\r\n    image = models.FileField(blank=False, null=False)\r\n    image_description = models.CharField(max_length=255)\r\n    image_uploaded_at = models.DateTimeField(auto_now_add=True)\r\n    image_property_id = models.ForeignKey(userProfile, null=False, on_delete=models.CASCADE)\r\n\r\nclass Text(models.Model):\r\n    text = models.CharField(max_length=300)\r\n    text_uploaded_at = models.DateTimeField(auto_now_add=True)\r\n    text_description = models.CharField(max_length=255)\r\n    text_property_id = models.ForeignKey(userProfile, null=False, on_delete=models.CASCADE)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- AdRecords/models.py	(revision 232ce9bd653c28d83378cea63913964f50f6f400)
+++ AdRecords/models.py	(date 1596020110973)
@@ -5,10 +5,10 @@
     image = models.FileField(blank=False, null=False)
     image_description = models.CharField(max_length=255)
     image_uploaded_at = models.DateTimeField(auto_now_add=True)
-    image_property_id = models.ForeignKey(userProfile, null=False, on_delete=models.CASCADE)
+    image_property_id = models.ForeignKey(userProfile, related_name="image_property_id", null=False, on_delete=models.CASCADE)
 
 class Text(models.Model):
     text = models.CharField(max_length=300)
     text_uploaded_at = models.DateTimeField(auto_now_add=True)
     text_description = models.CharField(max_length=255)
-    text_property_id = models.ForeignKey(userProfile, null=False, on_delete=models.CASCADE)
\ No newline at end of file
+    text_property_id = models.ForeignKey(userProfile, related_name="text_property_id", null=False, on_delete=models.CASCADE)
\ No newline at end of file
Index: AdRecords/migrations/0007_auto_20200729_1521.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- AdRecords/migrations/0007_auto_20200729_1521.py	(date 1596016299380)
+++ AdRecords/migrations/0007_auto_20200729_1521.py	(date 1596016299380)
@@ -0,0 +1,25 @@
+# Generated by Django 3.0.8 on 2020-07-29 09:51
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('accounts', '0003_auto_20200727_1427'),
+        ('AdRecords', '0006_auto_20200728_2051'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='image',
+            name='image_property_id',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_property_id', to='accounts.userProfile'),
+        ),
+        migrations.AlterField(
+            model_name='text',
+            name='text_property_id',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_property_id', to='accounts.userProfile'),
+        ),
+    ]
